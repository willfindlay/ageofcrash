name: Unit Tests

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'docs/**'
      - 'LICENSE'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'docs/**'
      - 'LICENSE'

jobs:
  test:
    name: Run Unit Tests
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
        
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-test-
          ${{ runner.os }}-cargo-
          
    - name: Run unit tests
      run: cargo test --verbose --all
      
    - name: Run unit tests with release profile
      run: cargo test --verbose --all --release
      
    - name: Generate test coverage report
      run: |
        cargo test --verbose --all 2>&1 | tee test-output.txt
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        grep -E "(running [0-9]+ tests|test result: ok\. [0-9]+ passed)" test-output.txt >> $GITHUB_STEP_SUMMARY || echo "Test summary extraction failed" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
      shell: bash
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-output.txt
        retention-days: 7